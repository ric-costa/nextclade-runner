
process {
    withName: 'IRMA' {
        publishDir = [
            [
                path: { "${params.outdir}/irma"},
                mode: params.publish_dir_mode
            ],
            [
                path: { "${params.outdir}/consensus/irma/" },
                pattern: "*.irma.consensus.fasta",
                mode: params.publish_dir_mode
            ]
        ]
    }

    withName: 'BLAST_MAKEBLASTDB_NCBI' {
        ext.args  = '-dbtype nucl'
        publishDir = [
            [
                path: { "${params.outdir}/blast/db/ncbi" },
                mode: params.publish_dir_mode
            ]
        ]
    }
    withName: 'BLAST_MAKEBLASTDB_REFDB' {
        ext.args  = '-dbtype nucl'
        publishDir = [
            [
                path: { "${params.outdir}/blast/db/ref_db" },
                mode: params.publish_dir_mode
            ]
        ]
    }

    withName: 'BLAST_BLASTN_IRMA' {
        ext.args = '-outfmt "6 qaccver saccver pident length mismatch gapopen qstart qend sstart send evalue bitscore qlen slen qcovs stitle" -num_alignments 1000000 -evalue 1e-6'
        publishDir = [
            [
                path: { "${params.outdir}/blast/blastn/irma" },
                mode: params.publish_dir_mode
            ]
        ]
    }

    withName: 'BLAST_BLASTN_CONSENSUS' {
        ext.args = '-outfmt "6 qaccver saccver pident length mismatch gapopen qstart qend sstart send evalue bitscore qlen slen qcovs stitle" -num_alignments 1000000 -evalue 1e-6'
        publishDir = [
            [
                path: { "${params.outdir}/blast/blastn/consensus" },
                mode: params.publish_dir_mode
            ]
        ]
    }

    withName: 'BLAST_BLASTN_CONSENSUS_REF_DB' {
        ext.args = '-outfmt "6 qaccver saccver pident length mismatch gapopen qstart qend sstart send evalue bitscore qlen slen qcovs stitle" -num_alignments 1000000 -evalue 1e-6'
        publishDir = [
            [
                path: { "${params.outdir}/blast/blastn/against_ref_db" },
                mode: params.publish_dir_mode
            ]
        ]
    }

    withName: 'BCF_CONSENSUS' {
        publishDir = [
            [
                path: { "${params.outdir}/consensus/bcftools/${sample}" },
                mode: params.publish_dir_mode
            ]
        ]
    }

    withName: 'BCFTOOLS_STATS' {
        publishDir = [
            [
                path: { "${params.outdir}/variants/${sample}" },
                mode: params.publish_dir_mode
            ]
        ]
    }

    withName: 'CAT_CONSENSUS' {
        publishDir = [
            [
                path: { "${params.outdir}/consensus/bcftools/"},
                pattern: "*.consensus.fasta",
                mode: params.publish_dir_mode
            ]
        ]
    }

    withName: 'COVERAGE_PLOT' {
        publishDir = [
            [
                path: { "${params.outdir}/coverage_plots/${sample}" },
                mode: params.publish_dir_mode
            ]
        ]
    }

    withName: 'MEDAKA' {
        publishDir = [
            [
                path: { "${params.outdir}/variants/${sample}" },
                pattern: "*.{vcf,log}",
                mode: params.publish_dir_mode
            ],
            [
                path: { "${params.outdir}/variants/${sample}/medaka"},
                mode: params.publish_dir_mode,
                enable: true
            ]
        ]
    }

    withName: 'CLAIR3' {
        publishDir = [
            [
                path: { "${params.outdir}/variants/${sample}"},
                pattern: "*.{vcf.gz,log}",
                mode: params.publish_dir_mode
            ],
            [
                path: { "${params.outdir}/variants/${sample}/clair3"},
                mode: params.publish_dir_mode,
                enable: true
            ]
        ]
    }

    withName: 'MINIMAP2' {
        publishDir = [
            [
                path: { "${params.outdir}/mapping/${sample}"},
                mode: params.publish_dir_mode
            ]
        ]
    }

    withName: 'MOSDEPTH_GENOME' {
        publishDir = [
            [
                path: { "${params.outdir}/mosdepth/${sample}"},
                mode: params.publish_dir_mode
            ]
        ]
    }

    withName: 'PULL_TOP_REF_ID' {
        publishDir = [
            [
                path: { "${params.outdir}/reference_sequences/${meta.id}"},
                pattern: "*.csv",
                mode: params.publish_dir_mode
            ]
        ]
    }

    withName: 'CHECK_REF_FASTA' {
        publishDir = [
            [
                path: { "${params.outdir}/reference_sequences/"},
                pattern: "*.fasta",
                mode: params.publish_dir_mode
            ]
        ]
    }

    withName: 'SEQTK_SEQ' {
        publishDir = [
            [
                path: { "${params.outdir}/reference_sequences/${sample}"},
                pattern: "*.fasta",
                mode: params.publish_dir_mode
            ]
        ]
    }

    withName: 'SUBTYPING_REPORT_BCF_CONSENSUS' {
        publishDir = [
            [
                path: { "${params.outdir}/"},
                pattern: "*.{xlsx,log}",
                mode: params.publish_dir_mode
            ]
        ]
    }

    withName: 'BLASTN_REPORT' {
        publishDir = [
            [
                path: { "${params.outdir}/mismatch_report"},
                pattern: "*.{xlsx}",
                mode: params.publish_dir_mode
            ]
        ]
    }

    withName: 'SUBTYPING_REPORT_IRMA_CONSENSUS' {
        publishDir = [
            [
                path: { "${params.outdir}/irma"},
                pattern: "*.{xlsx,log}",
                mode: params.publish_dir_mode
            ]
        ]
    }

    withName: 'VCF_FILTER_FRAMESHIFT' {
        publishDir = [
            [
                path: { "${params.outdir}/variants/${sample}" },
                pattern: "*.vcf",
                mode: params.publish_dir_mode
            ]
        ]
    }

    withName: 'GUNZIP_NCBI_FLU_FASTA' {
        publishDir = [
            [
                path: { "${params.outdir}/flu_fasta" },
                mode: params.publish_dir_mode
            ]
        ]
    }

    withName: 'READ_COUNT_FAIL_TSV' {
        publishDir = [
            [
                path: { "${params.outdir}/read_count" },
                mode: params.publish_dir_mode
            ]
        ]
    }

    withName: 'READ_COUNT_PASS_TSV' {
        publishDir = [
            [
                path: { "${params.outdir}/read_count" },
                mode: params.publish_dir_mode
            ]
        ]
    }

    withName: 'SOFTWARE_VERSIONS' {
         publishDir = [
            [
                path: { "${params.outdir}/pipeline_info" },
                pattern: "software_versions.yml",
                mode: params.publish_dir_mode
            ]
        ]
    }

    withName: 'MULTIQC' {
         publishDir = [
            [
                path: { "${params.outdir}/MultiQC" },
                mode: params.publish_dir_mode
            ]
        ]
    }
}
if (!params.skip_nextclade) {
    process {
        withName: 'UNTAR' {
            publishDir = [
                path: { "${params.outdir}/genome" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
                enabled: params.save_reference
            ]
        }

        withName: 'NEXTCLADE_DATASETGET' {
            publishDir = [
                path: { "${params.outdir}/genome" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
                enabled: params.save_reference
            ]
        }

        withName: 'NEXTCLADE_RUN' {
            publishDir = [
                path: { "${params.outdir}/nextclade" },
                mode: params.publish_dir_mode,
                saveAs: { filename -> filename.endsWith(".csv") && !filename.endsWith("errors.csv") && !filename.endsWith("insertions.csv") ? filename : null }
            ]
        }

        withName: 'MULTIQC_TSV_NEXTCLADE' {
            publishDir = [
                path: { "${params.outdir}/multiqc/${params.artic_minion_caller}" },
                enabled: false
            ]
        }
    }
}